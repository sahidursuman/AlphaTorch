= form_for @invoice do |f|
  .row
    .col-md-3.well.noprint
      #past_events
        %table.table
          %caption.h4
            = 'Past Events'
            #add_all.h6= link_to 'Add All', '#'
          %thead
            %tr
              %th.h5= 'Date'
              %th.h5= 'Services'
              %th.h5= 'Cost'
              %th
          %tbody
            -if @workorder
              .invoice_id{style:'display:none'}= @invoice.id
              - @workorder.uninvoiced_events.past.order('start asc').each do |event|
                %tr
                  - event_services = event.event_services
                  %td.h6= event.start.strftime('%m/%d/%Y')
                  %td.h6= event_services.map(&:service).flatten.map(&:name).flatten.join(', ')
                  %td.h6= humanized_money_with_symbol(event_services.map(&:cost_dollars).sum)
                  %td
                    = content_tag(:i, nil, class:'glyphicon glyphicon-plus add-line-item', style:'color:green')
                    .event_id{style:'display:none'}= event.id

    .col-md-8.col-md-offset-1.well
      #invoice_document
        - if !@invoice.new_record?
          .row
            .col-md-12
              .pull-left
                = image_tag 'cortez_logo.png', size: '75x75'
              .h4.pull-right
                = "Invoice# #{@invoice.id}"
                .row
                  .col-md-12.noprint
                    = link_to 'Print', 'javascript:window.print()', class:'btn btn-xs btn-default'
                    = link_to 'Back', invoice_path(@invoice,workorder_id:@workorder.id), class:'btn btn-xs btn-default'

        - else
          .row
            .col-md-12
              = link_to 'Save Invoice', nil, class:'btn btn-lg btn-success'
        %hr
        .row
          .col-md-3.pull-left
            .h5= @customer.name
            .h5= @customer.customer_address.street_address_1
            .h5= @customer.customer_address.street_address_2
            .h5= "#{@customer.customer_address.city}, #{@customer.customer_address.state.short_name} #{@customer.customer_address.postal_code}"
            - if @customer.primary_phone
              .h5= @customer.primary_phone
            - elsif @customer.secondary_phone
              .h5= @customer.secondary_phone
            - if @customer.email
              .h5= @customer.email
          .col-md-3.col-md-offset-1.pull-left{style:'margin-left:100px;'}
            .h5
              %b Service Address
            .h5= @property.street_address_1
            - if @property.street_address_2
              .h5= @property.street_address_2
            .h5= "#{@property.city}, #{@property.state.short_name} #{@property.postal_code}"
          .col-md-3.pull-right
            .h5= "Created: #{(@invoice.invoice_date.strftime('%m/%d/%Y') rescue Date.today.strftime('%m/%d/%Y'))}"
            .h5= "Due By: #{(@invoice.due_date.strftime('%m/%d/%Y') rescue (Date.today+1.month).strftime('%m/%d/%Y'))}"
            .h5= "Total: #{humanized_money_with_symbol(@invoice.invoice_amount_dollars)}"
            .h5= "Balance: #{humanized_money_with_symbol(@invoice.balance_due)}"

        %hr
        .row
          .col-md-12
            %table.table.table-striped
              %thead
                %tr
                  %th.noprint
                  %th.h5= 'Date'
                  %th.h5= 'Services'
                  %th.h5= 'Comments'
                  %th.h5= 'Cost'
              %tbody
                - unless @invoice.events.empty?
                  - @invoice.events.order('start asc').each do |event|
                    = render 'line_item', {event:event}

        - unless @invoice.payment_details.empty?
          %hr
            .row
              .col-md-12
                %table.table.table-striped
                  %caption.h3 Payments Received
                  %thead
                    %tr
                      %th.h5= 'Date'
                      %th.h5= 'Received From'
                      %th.h5= 'Amount'
                      %th.h5= 'Payment Method'

                  %tbody
                    - @invoice.payment_details.order('payment_date asc').each do |payment|
                      = render 'payment_line', {payment:payment}